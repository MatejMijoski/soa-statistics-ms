swagger: '2.0'
info:
  title: Statistics API
  version: "0.1"
  description: Statistics API Endpoints
consumes:
  - application/json
produces:
  - application/json
basePath: "/api"
paths:
  /invoice:
    post:
      tags: [ NewInvoice ]
      operationId: app.new_invoice
      summary: Update counters with new invoice
      parameters:
        - $ref: '#/parameters/invoice_body'
      responses:
        200:
          description: Return status
        400:
          description: Bad request
  /achievement/{user_ID}:
    get:
      tags: [ UserAchievments ]
      operationId: app.get_achievement_user
      summary: Get all achievements for a user.
      parameters:
        - $ref: '#/parameters/user_ID'
      responses:
        200:
          description: Return status
        400:
          description: Bad request
  /filter/score/year/{limit}:
    get:
      tags: [ MonthlyProduct ]
      operationId: app.get_yearly_score
      summary: Get the yearly scores filtered by limit.
      parameters:
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: Return status
        400:
          description: Bad request
  /filter/score/month/{limit}:
      get:
        tags: [ MonthlyProduct ]
        operationId: app.get_monthly_score
        summary: Get the monthly score filtered by limit.
        parameters:
          - $ref: '#/parameters/limit'
        responses:
          200:
            description: Return status
          400:
            description: Bad request
  /filter/product/month/top/{limit}:
    get:
      tags: [MonthlyProduct]
      operationId: app.get_top_monthly_products
      summary: Get the monthly products filtered by limit.
      parameters:
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: Return status
        400:
          description: Bad request
  /filter/product/month/end/{limit}:
      get:
        tags: [ MonthlyProduct ]
        operationId: app.get_end_monthly_products
        summary: Get the monthly products filtered by limit.
        parameters:
          - $ref: '#/parameters/limit'
        responses:
          200:
            description: Return status
          400:
            description: Bad request
  /filter/product/year/top/{limit}:
    get:
      tags: [YearlyProduct]
      operationId: app.get_top_yearly_products
      summary: Get the yearly product filtered by limit.
      parameters:
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: Return status
        400:
          description: Bad request
  /filter/product/year/end/{limit}:
    get:
      tags: [ YearlyProduct ]
      operationId: app.get_end_yearly_products
      summary: Get the least bought yearly product filtered by limit.
      parameters:
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: Return status
        400:
          description: Bad request


parameters:
  invoice_body:
    name: invoice_body
    description: The body for a new Invoice
    in: body
    schema:
      required:
        - user_id
        - type_of_product
        - quantity
        - product_id
      properties:
        user_id:
          type: integer
          description: Id of the user
        type_of_product:
          type: string
          description: The type of the product that is purchased
        quantity:
          type: integer
          description: The quantity that is purchased
        product_id:
          type: integer
          description: The ID of the product
  user_ID:
    name: user_ID
    description: The id of the user
    in: path
    required: true
    type: integer
  limit:
    name: limit
    description: The id of the user
    in: path
    required: true
    type: integer